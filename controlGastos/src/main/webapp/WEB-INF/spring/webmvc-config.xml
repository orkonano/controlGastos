<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd                 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- The controllers are autodetected POJOs labeled with the @Controller 
		annotation. -->
	<context:component-scan base-package="orko.dev.controlgastos"
		use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<!-- Turns on support for mapping requests to Spring MVC @Controller methods 
		Also registers default Formatters and Validators for use across all @Controllers -->
	<mvc:annotation-driven conversion-service="applicationConversionService" />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources -->
	<mvc:resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static 
		resource requests to the container's default Servlet -->
	<mvc:default-servlet-handler />

	<!-- Register "global" interceptor beans to apply to all registered HandlerMappings -->
	<mvc:interceptors>
		<!-- On pre-handle, resolve the device that originated the web request -->
		<bean
			class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
		<!-- On pre-handle, manage the user's site preference (declare after DeviceResolverHandlerInterceptor) -->
		<bean class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" />

		<bean class="org.springframework.mobile.device.switcher.SiteSwitcherHandlerInterceptor"	factory-method="urlPath">
			<constructor-arg index="0" type="java.lang.String"	value="/m" />
			<constructor-arg index="1" type="java.lang.String" value="/controlGastos" />
		</bean>

		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang" />
	</mvc:interceptors>

	<!-- Selects a static view for rendering without the need for an explicit 
		controller -->
	<mvc:view-controller path="/login" />
	<mvc:view-controller path="/" view-name="index" />
	<mvc:view-controller path="/uncaughtException" />
	<mvc:view-controller path="/resourceNotFound" />
	<mvc:view-controller path="/accessDenied" />


	<!-- Resolves localized messages*.properties and application.properties 
		files in the application to allow for internationalization. The messages*.properties 
		files translate Roo generated messages which are part of the admin interface, 
		the application.properties resource bundle localizes all application specific 
		messages such as entity names and menu items. -->
	<bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
		p:fallbackToSystemLocale="false" />

	<!-- Store preferred language configuration in a cookie -->
	<bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		id="localeResolver" p:cookieName="locale" />

	<!-- Resolves localized <theme_name>.properties files in the classpath to 
		allow for theme support -->
	<bean
		class="org.springframework.ui.context.support.ResourceBundleThemeSource"
		id="themeSource" />

	<!-- Store preferred theme configuration in a cookie -->
	<bean class="org.springframework.web.servlet.theme.CookieThemeResolver"
		id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard" />

	<!-- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions. -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"
		p:defaultErrorView="uncaughtException">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
				<prop key=".AccessDeniedException">accessDenied</prop>
				<prop key=".InvalidTokenException">invalidToken</prop>
			</props>
		</property>
	</bean>

	<!-- Enable this for integration of file upload functionality -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver" />


	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
		id="tilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<!-- Scan views directory for Tiles configurations -->
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
		<constructor-arg>
			<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
				id="tilesViewResolver">
				<property name="viewClass"
					value="org.springframework.web.servlet.view.tiles2.TilesView" />
			</bean>
		</constructor-arg>
		<property name="enableFallback" value="true" />
		<property name="mobilePrefix" value="mobile/" />
		<property name="tabletPrefix" value="tablet/" />
	</bean>


	<bean class="orko.dev.controlgastos.web.ApplicationConversionServiceFactoryBean" id="applicationConversionService" />

	<bean id="tokenWebValidator" class="orko.dev.springWebToken.aop.TokenWebValidator" />

	<aop:config>
		<aop:aspect ref="tokenWebValidator">
			<aop:before pointcut="execution(* orko.dev.controlgastos.web.*.create(..))"
				method="validateToken" />
			<aop:before pointcut="execution(* orko.dev.controlgastos.web.*.update(..))"
				method="validateToken" />
			<aop:before
				pointcut="execution(* orko.dev.controlgastos.web.security.ChangePasswordController.changePassword(..))"
				method="validateToken" />
			<aop:before
				pointcut="execution(* orko.dev.controlgastos.web.BudgetController.budgetCopy(..))"
				method="validateToken" />
		</aop:aspect>
	</aop:config>
</beans>
